snippet cd
	cd "${0%/*}"
	cd "$(dirname "\$0")"
snippet a
	${${0:arr}[@]}

snippet pf
	printf "${0}\n"

snippet for
	for ${1:var} in ${${2:array}[@]}; do
	    ${3:echo $var}
	done

snippet whilefind
	#-r  raw input - disables interpretion of backslash escapes and line-continuation in the read data
	#-d  <DELIM>   - recognize <DELIM> as data-end, rather than <newline>
	while IFS= read -r -d $'\0' line; do
		echo "$line"
	done < <(find /tmp -type f -print0)

snippet read
	while IFS= read -r line; do
	    echo "$line"
	done

snippet readfind
	while IFS= read -r -d $'\0' line; do
	    echo "$line"
	done < <(find /tmp -type f -print0)

snippet re
	${0:name}p='^${1:(.*)}$'
	if [[ '${2:Chad is good}' =~ $${0}p ]]; then
	    echo ${BASH_REMATCH[1]}
	fi

snippet log
	show() {
	    if [[ -t 1 ]]; then
	        # Coloring is ok
	        printf -- "\x1b[\$2m\$1\x1b[m\n"
	    else
	        printf -- "\$1\n"
	    fi
	}
	
	error() { show "ERROR: \$1" 31; } # 31 is red
	warn()  { show "WARN: \$1" 33; }  # 33 is yellow
	info()  { show "INFO: \$1" 34; }  # 34 is blue
	# Outputs the first parameter and terminates with exit 1
	die() {
	    error "\$1"
	    exit 1
	}
snippet case
	case $${1:var} in
	    ${2:chad|david})
	        echo yes
	        ;;
	    *)
	        echo no
	        ;;
	esac
	${3}
snippet cc
	case $${1:var} in
	    ${2:chad|david}) echo yes ;;
	    *)          echo no  ;;
	esac
	${3}
snippet i
	info "${1}"${2}
snippet w
	warn "${1}"${2}
snippet e
	error "${1}"${2}
snippet d
	die "${1}"${2}
